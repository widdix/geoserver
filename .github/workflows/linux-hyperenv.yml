name: Linux JDK GitHub CI HyperEnv

on:
  pull_request:
    paths-ignore:
      - '**/src/main/resources/GeoServerApplication_*.properties'
      - '!**/src/main/resources/GeoServerApplication_fr.properties'
  push:

env:
  MAVEN_OPTS: -Xmx1024m -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss,SSS -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dspotless.apply.skip=true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        jdk: [ 11, 17, 21 ]
        dist: [ 'temurin' ]
        os: [ 'ubuntu-22.04' ]
    runs-on: ['hyperenv', 'prod', 'public-vpc']
    
    steps:
    - uses: actions/checkout@v4
      with:
        # 500 commits, set to 0 to get all
        fetch-depth: 500
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.jdk }}
        distribution: ${{ matrix.dist }}
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.8
    - name: Maven repository caching
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: gs-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          gs-${{ runner.os }}-maven-
    - name: Build with Maven
      run: |
        mvn --version
        mvn -B -ntp -U -T3 -fae -Prelease -f src/pom.xml clean install
    - name: Build community modules without tests
      run: |
        mvn -B -ntp -nsu -U -T4 -fae -DskipTests -PcommunityRelease -f src/community/pom.xml clean install
    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}

